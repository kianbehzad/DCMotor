// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_parsian_simurosot_data_wrapper.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "messages_parsian_simurosot_detection.pb.h"
#include "messages_parsian_simurosot_worldmodel.pb.h"
#include "messages_parsian_simurosot_debugs.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto;
class DataWrapper;
class DataWrapperDefaultTypeInternal;
extern DataWrapperDefaultTypeInternal _DataWrapper_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::DataWrapper* Arena::CreateMaybeMessage<::DataWrapper>(Arena*);
template<> ::Header* Arena::CreateMaybeMessage<::Header>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class Header :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }
  inline void Swap(Header* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const final {
    return CreateMaybeMessage<Header>(nullptr);
  }

  Header* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Header* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Header";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto);
    return ::descriptor_table_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqFieldNumber = 1,
    kStampSecondFieldNumber = 2,
    kStampNsecondFieldNumber = 3,
  };
  // uint32 seq = 1;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stamp_second = 2;
  void clear_stamp_second();
  ::PROTOBUF_NAMESPACE_ID::uint32 stamp_second() const;
  void set_stamp_second(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stamp_second() const;
  void _internal_set_stamp_second(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 stamp_nsecond = 3;
  void clear_stamp_nsecond();
  ::PROTOBUF_NAMESPACE_ID::uint32 stamp_nsecond() const;
  void set_stamp_nsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stamp_nsecond() const;
  void _internal_set_stamp_nsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Header)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stamp_second_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stamp_nsecond_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto;
};
// -------------------------------------------------------------------

class DataWrapper :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DataWrapper) */ {
 public:
  DataWrapper();
  virtual ~DataWrapper();

  DataWrapper(const DataWrapper& from);
  DataWrapper(DataWrapper&& from) noexcept
    : DataWrapper() {
    *this = ::std::move(from);
  }

  inline DataWrapper& operator=(const DataWrapper& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataWrapper& operator=(DataWrapper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataWrapper& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataWrapper* internal_default_instance() {
    return reinterpret_cast<const DataWrapper*>(
               &_DataWrapper_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DataWrapper& a, DataWrapper& b) {
    a.Swap(&b);
  }
  inline void Swap(DataWrapper* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataWrapper* New() const final {
    return CreateMaybeMessage<DataWrapper>(nullptr);
  }

  DataWrapper* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataWrapper>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataWrapper& from);
  void MergeFrom(const DataWrapper& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataWrapper* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DataWrapper";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto);
    return ::descriptor_table_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kDrawsFieldNumber = 2,
    kDebugsFieldNumber = 3,
    kDetectionFieldNumber = 4,
    kWorldmodelFieldNumber = 5,
  };
  // .Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);
  private:
  const ::Header& _internal_header() const;
  ::Header* _internal_mutable_header();
  public:

  // .Draws draws = 2;
  bool has_draws() const;
  private:
  bool _internal_has_draws() const;
  public:
  void clear_draws();
  const ::Draws& draws() const;
  ::Draws* release_draws();
  ::Draws* mutable_draws();
  void set_allocated_draws(::Draws* draws);
  private:
  const ::Draws& _internal_draws() const;
  ::Draws* _internal_mutable_draws();
  public:

  // .Logs debugs = 3;
  bool has_debugs() const;
  private:
  bool _internal_has_debugs() const;
  public:
  void clear_debugs();
  const ::Logs& debugs() const;
  ::Logs* release_debugs();
  ::Logs* mutable_debugs();
  void set_allocated_debugs(::Logs* debugs);
  private:
  const ::Logs& _internal_debugs() const;
  ::Logs* _internal_mutable_debugs();
  public:

  // .Frame detection = 4;
  bool has_detection() const;
  private:
  bool _internal_has_detection() const;
  public:
  void clear_detection();
  const ::Frame& detection() const;
  ::Frame* release_detection();
  ::Frame* mutable_detection();
  void set_allocated_detection(::Frame* detection);
  private:
  const ::Frame& _internal_detection() const;
  ::Frame* _internal_mutable_detection();
  public:

  // .WorldModel worldmodel = 5;
  bool has_worldmodel() const;
  private:
  bool _internal_has_worldmodel() const;
  public:
  void clear_worldmodel();
  const ::WorldModel& worldmodel() const;
  ::WorldModel* release_worldmodel();
  ::WorldModel* mutable_worldmodel();
  void set_allocated_worldmodel(::WorldModel* worldmodel);
  private:
  const ::WorldModel& _internal_worldmodel() const;
  ::WorldModel* _internal_mutable_worldmodel();
  public:

  // @@protoc_insertion_point(class_scope:DataWrapper)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::Header* header_;
  ::Draws* draws_;
  ::Logs* debugs_;
  ::Frame* detection_;
  ::WorldModel* worldmodel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// uint32 seq = 1;
inline void Header::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::seq() const {
  // @@protoc_insertion_point(field_get:Header.seq)
  return _internal_seq();
}
inline void Header::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seq_ = value;
}
inline void Header::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:Header.seq)
}

// uint32 stamp_second = 2;
inline void Header::clear_stamp_second() {
  stamp_second_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::_internal_stamp_second() const {
  return stamp_second_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::stamp_second() const {
  // @@protoc_insertion_point(field_get:Header.stamp_second)
  return _internal_stamp_second();
}
inline void Header::_internal_set_stamp_second(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stamp_second_ = value;
}
inline void Header::set_stamp_second(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stamp_second(value);
  // @@protoc_insertion_point(field_set:Header.stamp_second)
}

// uint32 stamp_nsecond = 3;
inline void Header::clear_stamp_nsecond() {
  stamp_nsecond_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::_internal_stamp_nsecond() const {
  return stamp_nsecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Header::stamp_nsecond() const {
  // @@protoc_insertion_point(field_get:Header.stamp_nsecond)
  return _internal_stamp_nsecond();
}
inline void Header::_internal_set_stamp_nsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  stamp_nsecond_ = value;
}
inline void Header::set_stamp_nsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stamp_nsecond(value);
  // @@protoc_insertion_point(field_set:Header.stamp_nsecond)
}

// -------------------------------------------------------------------

// DataWrapper

// .Header header = 1;
inline bool DataWrapper::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool DataWrapper::has_header() const {
  return _internal_has_header();
}
inline void DataWrapper::clear_header() {
  if (GetArenaNoVirtual() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::Header& DataWrapper::_internal_header() const {
  const ::Header* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline const ::Header& DataWrapper::header() const {
  // @@protoc_insertion_point(field_get:DataWrapper.header)
  return _internal_header();
}
inline ::Header* DataWrapper::release_header() {
  // @@protoc_insertion_point(field_release:DataWrapper.header)
  
  ::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::Header* DataWrapper::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  return header_;
}
inline ::Header* DataWrapper::mutable_header() {
  // @@protoc_insertion_point(field_mutable:DataWrapper.header)
  return _internal_mutable_header();
}
inline void DataWrapper::set_allocated_header(::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:DataWrapper.header)
}

// .Draws draws = 2;
inline bool DataWrapper::_internal_has_draws() const {
  return this != internal_default_instance() && draws_ != nullptr;
}
inline bool DataWrapper::has_draws() const {
  return _internal_has_draws();
}
inline const ::Draws& DataWrapper::_internal_draws() const {
  const ::Draws* p = draws_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Draws*>(
      &::_Draws_default_instance_);
}
inline const ::Draws& DataWrapper::draws() const {
  // @@protoc_insertion_point(field_get:DataWrapper.draws)
  return _internal_draws();
}
inline ::Draws* DataWrapper::release_draws() {
  // @@protoc_insertion_point(field_release:DataWrapper.draws)
  
  ::Draws* temp = draws_;
  draws_ = nullptr;
  return temp;
}
inline ::Draws* DataWrapper::_internal_mutable_draws() {
  
  if (draws_ == nullptr) {
    auto* p = CreateMaybeMessage<::Draws>(GetArenaNoVirtual());
    draws_ = p;
  }
  return draws_;
}
inline ::Draws* DataWrapper::mutable_draws() {
  // @@protoc_insertion_point(field_mutable:DataWrapper.draws)
  return _internal_mutable_draws();
}
inline void DataWrapper::set_allocated_draws(::Draws* draws) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(draws_);
  }
  if (draws) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      draws = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, draws, submessage_arena);
    }
    
  } else {
    
  }
  draws_ = draws;
  // @@protoc_insertion_point(field_set_allocated:DataWrapper.draws)
}

// .Logs debugs = 3;
inline bool DataWrapper::_internal_has_debugs() const {
  return this != internal_default_instance() && debugs_ != nullptr;
}
inline bool DataWrapper::has_debugs() const {
  return _internal_has_debugs();
}
inline const ::Logs& DataWrapper::_internal_debugs() const {
  const ::Logs* p = debugs_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Logs*>(
      &::_Logs_default_instance_);
}
inline const ::Logs& DataWrapper::debugs() const {
  // @@protoc_insertion_point(field_get:DataWrapper.debugs)
  return _internal_debugs();
}
inline ::Logs* DataWrapper::release_debugs() {
  // @@protoc_insertion_point(field_release:DataWrapper.debugs)
  
  ::Logs* temp = debugs_;
  debugs_ = nullptr;
  return temp;
}
inline ::Logs* DataWrapper::_internal_mutable_debugs() {
  
  if (debugs_ == nullptr) {
    auto* p = CreateMaybeMessage<::Logs>(GetArenaNoVirtual());
    debugs_ = p;
  }
  return debugs_;
}
inline ::Logs* DataWrapper::mutable_debugs() {
  // @@protoc_insertion_point(field_mutable:DataWrapper.debugs)
  return _internal_mutable_debugs();
}
inline void DataWrapper::set_allocated_debugs(::Logs* debugs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(debugs_);
  }
  if (debugs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      debugs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, debugs, submessage_arena);
    }
    
  } else {
    
  }
  debugs_ = debugs;
  // @@protoc_insertion_point(field_set_allocated:DataWrapper.debugs)
}

// .Frame detection = 4;
inline bool DataWrapper::_internal_has_detection() const {
  return this != internal_default_instance() && detection_ != nullptr;
}
inline bool DataWrapper::has_detection() const {
  return _internal_has_detection();
}
inline const ::Frame& DataWrapper::_internal_detection() const {
  const ::Frame* p = detection_;
  return p != nullptr ? *p : *reinterpret_cast<const ::Frame*>(
      &::_Frame_default_instance_);
}
inline const ::Frame& DataWrapper::detection() const {
  // @@protoc_insertion_point(field_get:DataWrapper.detection)
  return _internal_detection();
}
inline ::Frame* DataWrapper::release_detection() {
  // @@protoc_insertion_point(field_release:DataWrapper.detection)
  
  ::Frame* temp = detection_;
  detection_ = nullptr;
  return temp;
}
inline ::Frame* DataWrapper::_internal_mutable_detection() {
  
  if (detection_ == nullptr) {
    auto* p = CreateMaybeMessage<::Frame>(GetArenaNoVirtual());
    detection_ = p;
  }
  return detection_;
}
inline ::Frame* DataWrapper::mutable_detection() {
  // @@protoc_insertion_point(field_mutable:DataWrapper.detection)
  return _internal_mutable_detection();
}
inline void DataWrapper::set_allocated_detection(::Frame* detection) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(detection_);
  }
  if (detection) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      detection = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, detection, submessage_arena);
    }
    
  } else {
    
  }
  detection_ = detection;
  // @@protoc_insertion_point(field_set_allocated:DataWrapper.detection)
}

// .WorldModel worldmodel = 5;
inline bool DataWrapper::_internal_has_worldmodel() const {
  return this != internal_default_instance() && worldmodel_ != nullptr;
}
inline bool DataWrapper::has_worldmodel() const {
  return _internal_has_worldmodel();
}
inline const ::WorldModel& DataWrapper::_internal_worldmodel() const {
  const ::WorldModel* p = worldmodel_;
  return p != nullptr ? *p : *reinterpret_cast<const ::WorldModel*>(
      &::_WorldModel_default_instance_);
}
inline const ::WorldModel& DataWrapper::worldmodel() const {
  // @@protoc_insertion_point(field_get:DataWrapper.worldmodel)
  return _internal_worldmodel();
}
inline ::WorldModel* DataWrapper::release_worldmodel() {
  // @@protoc_insertion_point(field_release:DataWrapper.worldmodel)
  
  ::WorldModel* temp = worldmodel_;
  worldmodel_ = nullptr;
  return temp;
}
inline ::WorldModel* DataWrapper::_internal_mutable_worldmodel() {
  
  if (worldmodel_ == nullptr) {
    auto* p = CreateMaybeMessage<::WorldModel>(GetArenaNoVirtual());
    worldmodel_ = p;
  }
  return worldmodel_;
}
inline ::WorldModel* DataWrapper::mutable_worldmodel() {
  // @@protoc_insertion_point(field_mutable:DataWrapper.worldmodel)
  return _internal_mutable_worldmodel();
}
inline void DataWrapper::set_allocated_worldmodel(::WorldModel* worldmodel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldmodel_);
  }
  if (worldmodel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      worldmodel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, worldmodel, submessage_arena);
    }
    
  } else {
    
  }
  worldmodel_ = worldmodel;
  // @@protoc_insertion_point(field_set_allocated:DataWrapper.worldmodel)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_messages_5fparsian_5fsimurosot_5fdata_5fwrapper_2eproto
